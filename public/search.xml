<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>python_Mysql操作之坑</title>
      <link href="/2019/12/14/python-Mysql%E6%93%8D%E4%BD%9C%E4%B9%8B%E5%9D%91/"/>
      <url>/2019/12/14/python-Mysql%E6%93%8D%E4%BD%9C%E4%B9%8B%E5%9D%91/</url>
      
        <content type="html"><![CDATA[<h4 id="python在直接插入mysql时内容带有引号会报错"><a href="#python在直接插入mysql时内容带有引号会报错" class="headerlink" title="python在直接插入mysql时内容带有引号会报错"></a>python在直接插入mysql时内容带有引号会报错</h4><p>处理方法：</p><p>1.使用pymysql的一个方法自动转义可避坑</p><p><strong>pymysql.escape_string(str)</strong></p><p>*<em>str填要转义的字符 *</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">insert_dialogues_sql &#x3D; &quot;INSERT INTO dialogues(&#96;movie_id&#96;,&#96;ccontent&#96;,&#96;econtent&#96;,&#96;start_time&#96;,&#96;created_at&#96;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">VALUES(&#39;%s&#39;,&#39;%s&#39;,&#39;%s&#39;,&#39;%s&#39;,&#39;%s&#39;)&quot; % (movie_id, pymysql.escape_string(ccontent),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">pymysql.escape_string(econtent),&#39;0&#39;,created_at)</span></pre></td></tr></table></figure><p>2.使用转义字符咯</p><p>个人不喜</p>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JaveScript</title>
      <link href="/2019/12/12/JaveScript/"/>
      <url>/2019/12/12/JaveScript/</url>
      
        <content type="html"><![CDATA[<h4 id="1-JavaScript嵌入页面的方式"><a href="#1-JavaScript嵌入页面的方式" class="headerlink" title="1. JavaScript嵌入页面的方式"></a>1. JavaScript嵌入页面的方式</h4><p>1.行间事件（主要用于事件）</p><p><code>&lt;input type=&quot;button&quot; name=&quot;&quot; onclick=&quot;alert(&#39;ok！&#39;);&quot;&gt;</code></p><p>2.页面script标签嵌入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    alert(&#39;ok！&#39;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;script&gt;</span></pre></td></tr></table></figure><p>3.外部引入</p><p><code>&lt;script type=&quot;text/javascript&quot; src=&quot;js/index.js&quot;&gt;&lt;/script&gt;</code></p><p><strong>script和htmlxie写在同一html里（script写在body之前），要用window.onload d = function()加载渲染</strong></p><h4 id="2-变量类型"><a href="#2-变量类型" class="headerlink" title="2. 变量类型"></a>2. 变量类型</h4><p>JavaScript 是一种弱类型语言，javascript的变量类型由它的值来决定。 定义变量需要用关键字 ‘var’</p><h6 id="5种基本数据类型："><a href="#5种基本数据类型：" class="headerlink" title="5种基本数据类型："></a>5种基本数据类型：</h6><p>1 number 数字类型</p><p>2、string 字符串类型</p><p>3、boolean 布尔类型 true 或 false</p><p>4、undefined undefined类型，变量声明未初始化，它的值就是undefined</p><p>5、null null类型，表示空对象，如果定义的变量将来准备保存对象，可以将变量初始化为null,在页面上获取不到对象，返回的值就是null</p><h6 id="1种复合类型："><a href="#1种复合类型：" class="headerlink" title="1种复合类型："></a>1种复合类型：</h6><p>object</p><a id="more"></a><h6 id="变量、函数、属性、函数参数命名规范"><a href="#变量、函数、属性、函数参数命名规范" class="headerlink" title="变量、函数、属性、函数参数命名规范"></a>变量、函数、属性、函数参数命名规范</h6><p>1、区分大小写<br>2、第一个字符必须是字母、下划线（_）或者美元符号（$）<br>3、其他字符可以是字母、下划线、美元符或数字</p><h6 id="匈牙利命名风格："><a href="#匈牙利命名风格：" class="headerlink" title="匈牙利命名风格："></a>匈牙利命名风格：</h6><p>对象o Object 比如：oDiv<br>数组a Array 比如：aItems<br>字符串s String 比如：sUserName<br>整数i Integer 比如：iItemCount<br>布尔值b Boolean 比如：bIsComplete<br>浮点数f Float 比如：fPrice<br>函数fn Function 比如：fnHandler<br>正则表达式re RegExp 比如：reEmailCheck</p><h4 id="3-操作元素属性"><a href="#3-操作元素属性" class="headerlink" title="3.操作元素属性"></a>3.操作元素属性</h4><p>获取的页面元素，就可以对页面元素的属性进行操作，属性的操作包括属性的读和写。</p><p>操作属性的方法<br>1、“.” 操作<br>2、“[ ]”操作</p><p>属性写法</p><p>1、html的属性和js里面属性写法一样<br>2、“class” 属性写成 “className”<br>3、“style” 属性里面的属性，有横杠的改成驼峰式，比如：“font-size”，改成”style.fontSize”</p><h4 id="4-条件语句"><a href="#4-条件语句" class="headerlink" title="4.条件语句"></a>4.条件语句</h4><p>通过条件来控制程序的走向，就需要用到条件语句。</p><p>运算符<br>1、算术运算符： +(加)、 -(减)、 *(乘)、 /(除)、 %(求余)</p><p>2、赋值运算符：=、 +=、 -=、 *=、 /=、 %=<br>3、条件运算符：==、===、&gt;、&gt;=、&lt;、&lt;=、!=、&amp;&amp;(而且)、||(或者)、!(否)</p><h4 id="5-数组及操作方法"><a href="#5-数组及操作方法" class="headerlink" title="5.数组及操作方法"></a>5.数组及操作方法</h4><p>1、获取数组的长度：aList.length;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">var aList &#x3D; [1,2,3,4];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">alert(aList.length); &#x2F;&#x2F; 弹出4</span></pre></td></tr></table></figure><p>2、用下标操作数组的某个数据：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">aList[0];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">var aList &#x3D; [1,2,3,4];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">alert(aList[0]); &#x2F;&#x2F; 弹出1</span></pre></td></tr></table></figure><p>3、join() 将数组成员通过一个分隔符合并成字符串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">var aList &#x3D; [1,2,3,4];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">alert(aList.join(&#39;-&#39;)); &#x2F;&#x2F; 弹出 1-2-3-4</span></pre></td></tr></table></figure><p>4、push() 和 pop() 从数组最后增加成员或删除成员</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">var aList &#x3D; [1,2,3,4];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">aList.push(5);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">alert(aList); &#x2F;&#x2F;弹出1,2,3,4,5</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">aList.pop();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">alert(aList); &#x2F;&#x2F; 弹出1,2,3,4</span></pre></td></tr></table></figure><p>5、unshift()和 shift() 从数组前面增加成员或删除成员</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">var aList &#x3D; [1,2,3,4];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">aList.unshift(5);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">alert(aList); &#x2F;&#x2F;弹出5,1,2,3,4</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">aList.shift();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">alert(aList); &#x2F;&#x2F; 弹出1,2,3,4</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">6、reverse() 将数组反转</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">var aList &#x3D; [1,2,3,4];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">aList.reverse();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">alert(aList);  &#x2F;&#x2F; 弹出4,3,2,1</span></pre></td></tr></table></figure><p>7、indexOf() 返回数组中元素第一次出现的索引值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">var aList &#x3D; [1,2,3,4,1,3,4];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">alert(aList.indexOf(1));</span></pre></td></tr></table></figure><p>8、splice() 在数组中增加或删除成员</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">var aList &#x3D; [1,2,3,4];</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">aList.splice(2,1,7,8,9); &#x2F;&#x2F;从第2个元素开始，删除1个元素，然后在此位置增加&#39;7,8,9&#39;三个元素</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">alert(aList); &#x2F;&#x2F;弹出 1,2,7,8,9,4</span></pre></td></tr></table></figure><p>多维数组<br>多维数组指的是数组的成员也是数组的数组。</p><h4 id="6-调试程序的方法"><a href="#6-调试程序的方法" class="headerlink" title="6.调试程序的方法"></a>6.调试程序的方法</h4><p>1、alert</p><p>2、console.log</p><p>3、document.title</p>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> JaveScipt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hahaha</title>
      <link href="/2019/12/11/hahaha/"/>
      <url>/2019/12/11/hahaha/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">aaaa</span></pre></td></tr></table></figure><h3 id="结合《策略：如何在复杂的世界里成为高手》的观点，我想联系我的生活，谈谈我的看法。"><a href="#结合《策略：如何在复杂的世界里成为高手》的观点，我想联系我的生活，谈谈我的看法。" class="headerlink" title="结合《策略：如何在复杂的世界里成为高手》的观点，我想联系我的生活，谈谈我的看法。"></a>结合《策略：如何在复杂的世界里成为高手》的观点，我想联系我的生活，谈谈我的看法。</h3><p>文章一开始介绍了生活中的没有策略会出现的问题，比如：在某种特殊的场合，不知道什么话该，说什么话不该说；在办公室，上级交代工作，而你初入职场，没有任何经验，未来全靠想象，最后业绩目标无法完成；与能影响你未来的人交往，不知道什么时候该表现自己，什么时候该沉默……</p><p>我分析了一下这种问题出现的主要原因：由于平时这种类型的事出现频率不够多，没有多的接触到影响到你未来的关键转折点，来临时，无法从以往的经验中获得答案，只能凭借本能采取行动，往往不能做到想要达到的效果，甚至会变得更糟。</p><a id="more"></a><p>到底要如何做，才能将问题迎刃而解呢？我的理解：任何一种经验都需要积累和反思的过程，就算把某些案例倒背如流，既然是小概率事件，实际遇到时，也会表现得不知所措。本书主要的内容是分享问题的解决思路，在普通的事例中，学到应对的法门，以此推彼，这个方法比专门训练应对特殊事件要可行得多。</p><p>下面透过文章的解读来告诉大家：</p><p>第一章第一节的标题《策略要有前瞻性，设定可实现的目标》，可以见得，设定目标是第一要做的事，目标决定了努力的方向，举个例子：作为学生，学习目标是完成学业，并取得一个好的成绩，作为工作者，目标就是完成上级交代的任务，发挥所长，为公司的生存作出努力……这些都不用再过多的重复，问题的关键在于实现目标的过程。</p><p>借用书中的一段文字：“现实生活中有很多这样的管理者，认为自己只是给企业打工的高级打工仔，公司的事与自己无关，即使公司倒闭了自己还可以再去别的公司，继续干自己的工作，拿属于自己的工资。所以，有些管理者就总想着应付工作，能避开的工作绝不插手，这样的管理者往往很难做好管理工作。企业在这样的管理者手中发展，其命运可想而知。”</p><p>这种现象不只存在于工作，学校的学生也有类似的情况，大学生尤为明显，他们中的大部分人只要60分不挂科就好，考试前，按照老师划重点的地方，考前学习两三天，过了及格线，也就完成了本学期的所有内容，有人说，大学的内容很难，能及格就不错，其实不然，说实话，大学的内容学习起来比高中更加容易，分数不高，是因为没有高考过独木桥的紧张感，投入的认真程度大打折扣。试想一下，如果以后的研发人员都是招收这样的学生，他们的研究成果你敢用吗？</p><p>引用一个例子：“意大利东北部的 城市佩扎罗有一个手艺很出色的木匠，他几乎做了一辈子的木匠活，想回家和老伴一起过清净悠闲地生活。雇主见老木匠确实上了年纪，便同意他的请求，但同时也提出一个要求：请老木匠在临走前再建造一栋房子。老木匠虽然答应了，但是此时他的工作态度却和以前有了很大的差别，以前的他会全心全意的工作，而现在，他在工作中却三心二意，不仅技术有所退步，而且有时候为了省事，还马虎敷衍，不久，房子完工了。雇主来看房子的时候顺便把房子的钥匙也交给老木匠，并一脸深沉的对他说：‘这所房子送给你了，希望你能住得舒服。’老木匠听闻一下子惊呆了，因为他无论如何也没有想到事情会这样发展，如果他早知道这是为自己建造的房子，他一定会用自己最精巧的工艺认真对待，绝不会偷工减料。至此，虽然他后悔不已，但也毫无办法。”</p><p>实现未来目标的不二法门是做好自己负责的每一件事，仰望星空的时候，也要低头看看脚下的路。</p><p>每年的寒暑假，我都会去做兼职，每个人做事的出发点各有不同，“有幸”在整理档案的工作中认识了一个高中毕业的男生，第一面的印象真的很深刻，穿着一双破旧的拖鞋邋里邋遢的出现在门口，当时项目主管提醒他，需要注意仪容仪表，他的态度很漠然，第二天还是穿着那双拖鞋，我们以为他很穷，穷到……只有一双这样的鞋子。然而，接下来的了解，让我们都大跌眼镜，他的表哥告诉我们：他家是做小生意的，每年几百万的净收入，来这里做兼职纯属体验生活，上学用的笔芯是二十块左右一支的，家里为他花钱，毫不手软，高考成绩不负众望，一本院校直接录取……天哪，人才呀！</p><p>没过几天，我们就发现，他整理档案的步骤，从来都没有问过任何一个人，全凭自己的想法来，以至于项目负责人只敢交给他超级简单的任务——使用打孔机给文件打孔，具体步骤：放20张文件在控针下方，位置尽量不能让孔针破坏文字，然后按压把手，孔针穿过纸张即可。剩下的事情就交给了其他人，由于他的工作任务很少，我们这群人累得够呛，没有时间注意他。过了一会儿，主管发现，每张重要的图纸还有证书原件都被打了孔，而且打孔机还被弄坏了，这下糟糕了，闯了大祸，怎么向这个单位的领导交代？这位男生淡淡的说道：“都是档案，也没有人会看，那么紧张干什么。”顿时引起所有人的反感，“图纸被打孔，你让工程师怎么分析，最可气的是证书的原件被打了孔，我们是来整理档案的……”这个男生一听，大吼到：“出了问题，让他们找我！一点小事大惊小怪！”</p><p>第二天，这个男生直接生病请假不来了，工资是他表哥代领。</p><p>一个能让一本院校录取的高材生，说话的态度、做事的方式都有问题，在操作的过程中，他看到了图纸和原件，没有问处理方式，问题发生了，也没有认识到自己的责任，反而还要说我们大惊小怪，最后不谈他是不是真的生病，这样的高材生，你觉得，他实现未来目标的可能会大于一个踏实肯干努力上进的人吗？</p><p>学生or工作者！任何一件事都值得你去做好，因为这样可以让你的目标最大限度的实现。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一天</title>
      <link href="/2019/12/10/%E7%AC%AC%E4%B8%80%E5%A4%A9/"/>
      <url>/2019/12/10/%E7%AC%AC%E4%B8%80%E5%A4%A9/</url>
      
        <content type="html"><![CDATA[<p>have a good night!</p>]]></content>
      
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
